(import (scheme load))
(load "sis.scm")
(load-source-bootstrap)

;; (load "sis-tests.scm")
;; (run-source-tests)

;; (xlate-st-bootstrap)


(display-ivars st-obj)
(class obj)
(superclass obj)
(display-allSupers obj)
(display-subs obj) ;; direct subclasses
(allInstVarNames st-obj)
(allSuperclasses st-obj)
(selectors obj)
(describe obj)

(define $     perform:)
(define $:    perform:with:)
(define $::   perform:with:with:)
(define $:::  perform:with:with:with:)
(define $:::: perform:with:with:with:with:)
(define $&    perform:withArguments:)
(define $*    perform:withArgsList:)

(define Mumble (newSubclassName:iVars:cVars: Object 'Mumble '(mumbleString) '(mumbleClassVar)))

(current-directory "/home/chip/SiS")

(xlate-st-file->scm
  (string-append st-kernel-prefix
		 "Collection.st"))

(xlate-st-file->scm-file
  (string-append st-kernel-prefix
		 "Collection.st")
  "/home/kend/SiS/Temp/Collection.scm")

;;; Scheme

(import (primitives trace untrace trace-entry trace-exit))

(debug-parser #true)
(trace-parse-methods #true)

;(debug-parser #false)
;(trace-parse-methods #false)
